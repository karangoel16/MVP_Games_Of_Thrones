version: 2
jobs:
  build:
    working_directory: ~/code
    docker:
    - image: runmymind/docker-android-sdk:latest
      environment:
        ANDROID_HOME: /opt/android-sdk-linux
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
    - checkout
    - restore_cache:
        key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
    #      - run:
    #         name: Chmod permissions #if permission for Gradlew Dependencies fail, use this.
    #         command: sudo chmod +x ./gradlew
    - run:
        name: Download Dependencies
        command: ./gradlew androidDependencies
    - save_cache:
        paths:
        - ~/.gradle
        key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
    - run:
        name: Run Tests
        command: ./gradlew lint test
    - run:
        name: Show list of system-images
        command: sdkmanager --list --verbose | grep system-images
    - run:
        name: Setup Emulator
        command: sdkmanager "system-images;android-21;default;armeabi-v7a" && echo "no" | avdmanager create avd -n test -k "system-images;android-21;default;armeabi-v7a"
    - run:
        name: Launch Emulator
        command: |
          cd ${ANDROID_HOME}/emulator;ls
          export LD_LIBRARY_PATH=${ANDROID_HOME}/emulator/lib64:${ANDROID_HOME}/emulator/lib64/qt/lib
          emulator -avd test -no-window -noaudio -no-boot-anim -no-window -accel on
        background: true
    - run:
        name: Wait emulator
        command: |
          circle-android wait-for-boot
          adb shell input keyevent 82
    - run:
        name: Run Espresso UI Tests
        command: ./gradlew :app:connectedDebugAndroidTest
    - store_artifacts:
        path: app/build/reports
        destination: reports
    - store_test_results:
        path: app/build/test-results